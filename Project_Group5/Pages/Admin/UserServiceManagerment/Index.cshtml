@page "/Admin/UserManagement"
@model Project_Group5.Pages.Admin.UserServiceManagerment.IndexModel
@{
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-500 text-white p-4 rounded-lg mb-4">
        @TempData["SuccessMessage"]
    </div>
}
<h1 class="text-3xl font-bold text-gray-900 mb-4">User Manager</h1>
<section class="bg-gray-50 bg-white p-3 sm:p-5 antialiased">
    <div class="mx-auto max-w-screen-xl px-4 lg:px-12">
        <!-- Start coding here -->
        <div class="bg-white relative shadow-md sm:rounded-lg overflow-hidden">
            <div class="flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4">
                <div class="w-full md:w-1/2">
                    <form method="get" asp-page-handler="Search" class="flex items-center">
                        <label for="simple-search" class="sr-only">Search</label>
                        <div class="relative w-full flex">
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                <svg aria-hidden="true" class="w-5 h-5 text-gray-500" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <input type="text" id="simple-search" name="searchString" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 p-2" placeholder="Search">
                        </div>

                        <!-- Bộ lọc vai trò (Role) -->
                        <select name="roleFilter" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg ml-2 p-2 focus:ring-primary-500 focus:border-primary-500">
                            <option value="">All Roles</option> <!-- Tùy chọn để hiển thị tất cả vai trò -->
                            @foreach (var role in Model.Roles)
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </select>

                        <button type="submit" class="bg-blue-500 text-white font-semibold rounded-lg px-4 py-2 ml-2 hover:bg-blue-600">Search</button>
                    </form>
                </div>

                <div class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0">
                    <button type="button" id="createProductModalButton" data-modal-target="createProductModal" data-modal-toggle="createProductModal" class="flex items-center justify-center text-white bg-blue-500 hover:bg-blue-600 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 focus:outline-none">
                        <svg class="h-3.5 w-3.5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                            <path clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" />
                        </svg>
                        Add User
                    </button>
                </div>
            </div>
        </div>

        <div class="overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-800 bg-white">
                <thead class="text-xs text-gray-900 uppercase bg-gray-200">
                    <tr>
                        <th scope="col" class="px-4 py-4">Name</th>
                        <th scope="col" class="px-4 py-3">Age</th>
                        <th scope="col" class="px-4 py-3">Role</th>
                        <th scope="col" class="px-4 py-3">Phone</th>
                        <th scope="col" class="px-4 py-3">Email</th> <!-- Cột Email -->
                        <th scope="col" class="px-4 py-3">Date of Birth</th> <!-- Cột Ngày sinh -->
                        <th scope="col" class="px-4 py-3"><span class="sr-only">Actions</span></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var customer in Model.Customers)
                    {
                        <tr class="border-b border-gray-300">
                            <th scope="row" class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap">@customer.Name</th>
                            <td class="px-4 py-3">@((DateTime.Now.Year - customer.Dob?.Year) ?? 0)</td>
                            <td class="px-4 py-3">
                                @((customer.RoleId == 1) ? "Admin" :
                                    (customer.RoleId == 2) ? "Customer" :
                                    (customer.RoleId == 3) ? "Receptionist" :
                                    "Unknown")
                            </td>
                            <td class="px-4 py-3 max-w-[12rem] truncate">@customer.Phone</td>
                            <td class="px-4 py-3">@customer.Email</td> <!-- Hiển thị Email -->
                            <td class="px-4 py-3">@customer.Dob?.ToString("dd/MM/yyyy")</td> <!-- Hiển thị Ngày sinh -->
                            <td class="px-4 py-3 flex items-center justify-end">
                                <button id="options-dropdown-@customer.Id" data-dropdown-toggle="dropdown-@customer.Id" class="inline-flex items-center text-sm font-medium hover:bg-gray-300 p-1.5 text-gray-800 rounded-lg focus:outline-none" type="button">
                                    <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
                                    </svg>
                                </button>
                                <div id="dropdown-@customer.Id" class="hidden z-10 w-44 bg-white rounded divide-y divide-gray-200 shadow">
                                    <ul class="py-1 text-sm" aria-labelledby="options-dropdown-@customer.Id">
                                        <li>
                                            <button type="button" class="edit-button flex w-full items-center py-2 px-4 hover:bg-gray-300 text-gray-800"
                                                    data-id="@customer.Id"
                                                    data-name="@customer.Name"
                                                    data-phone="@customer.Phone"
                                                    data-role-id="@customer.RoleId"
                                                    onclick="openUpdateUserModal(this)">
                                                <svg class="h-3.5 w-3.5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                                    <path clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" />
                                                </svg>
                                                Edit
                                            </button>
                                        </li>

                                        <li>
                                            <form method="post" class="deleteForm" asp-page-handler="Delete">
                                                <input type="hidden" name="id" value="@customer.Id" />
                                                <button type="submit" class="flex w-full items-center py-2 px-4 hover:bg-gray-300 text-red-500 delete-button"
                                                        onclick="return confirm('Are you really want to delete this user?');">
                                                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                                        <path d="M9 3h6a1 1 0 011 1v1h3a1 1 0 110 2h-1v13a2 2 0 01-2 2H8a2 2 0 01-2-2V7H5a1 1 0 110-2h3V4a1 1 0 011-1zM8 7v13h8V7H8zm2 2a1 1 0 112 0v8a1 1 0 11-2 0V9zm4 0a1 1 0 112 0v8a1 1 0 11-2 0V9z"></path>
                                                    </svg>
                                                    Delete
                                                </button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>
<!-- End block -->
<!-- Create modal -->
<div id="createProductModal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative p-4 w-full max-w-2xl max-h-full">
        <!-- Modal content -->
        <div class="relative p-4 bg-white rounded-lg shadow sm:p-5">
            <!-- Modal header -->
            <div class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 border-gray-300">
                <h3 class="text-lg font-semibold text-gray-900">Add User</h3>
                <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center" data-modal-target="createProductModal" data-modal-toggle="createProductModal">
                    <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
            </div>

            <!-- Modal body -->
            <form method="post" asp-page="./Index" id="customerForm" onsubmit="return validateForm()">
                <div class="grid gap-4 mb-4 sm:grid-cols-2">
                    <!-- Name Field -->
                    <div>
                        <label asp-for="Customer.Name" class="block mb-2 text-sm font-medium text-gray-900">Name</label>
                        <input asp-for="Customer.Name" id="customerName" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="Type name" />
                        <span id="nameError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Email Field -->
                    <div>
                        <label asp-for="Customer.Email" class="block mb-2 text-sm font-medium text-gray-900">Email</label>
                        <input asp-for="Customer.Email" id="customerEmail" type="email" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="Email" />
                        <span id="emailError" class="text-red-500 text-sm @(!ViewData.ModelState.IsValid && ViewData.ModelState["Customer.Email"] != null ? "" : "hidden")">
                            @ViewData.ModelState["Customer.Email"]?.Errors.FirstOrDefault()?.ErrorMessage
                        </span>
                    </div>

                    <!-- Date of Birth Field -->
                    <div>
                        <label asp-for="Customer.Dob" class="block mb-2 text-sm font-medium text-gray-900">Date of Birth</label>
                        <input asp-for="Customer.Dob" id="customerDob" type="date" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5">
                        <span id="dobError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Phone Field -->
                    <div>
                        <label asp-for="Customer.Phone" class="block mb-2 text-sm font-medium text-gray-900">Phone</label>
                        <input asp-for="Customer.Phone" id="customerPhone" type="text" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="Phone" />
                        <span id="phoneError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Username Field -->
                    <div>
                        <label asp-for="Customer.Username" class="block mb-2 text-sm font-medium text-gray-900">Username</label>
                        <input asp-for="Customer.Username" id="customerUsername" type="text" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="Username">
                        <span id="usernameError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Password Field -->
                    <div>
                        <label asp-for="Customer.Password" class="block mb-2 text-sm font-medium text-gray-900">Password</label>
                        <input asp-for="Customer.Password" id="customerPassword" type="password" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="Password" />
                        <span id="passwordError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Address Field -->
                    <div class="sm:col-span-2">
                        <label asp-for="Customer.Address" class="block mb-2 text-sm font-medium text-gray-900">Address</label>
                        <textarea asp-for="Customer.Address" id="customerAddress" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500" placeholder="Write address here"></textarea>
                        <span id="addressError" class="text-red-500 text-sm hidden"></span>
                    </div>

                    <!-- Role Field -->
                    <div>
                        <label asp-for="Customer.RoleId" class="block mb-2 text-sm font-medium text-gray-900">Role</label>
                        <select asp-for="Customer.RoleId" id="customerRoleId" class="form-control">
                            <option selected>Select Role</option>
                            @if (Model.Roles != null)
                            {
                                @foreach (var role in Model.Roles)
                                {
                                    <option value="@role.Id">@role.Name</option>
                                }
                            }
                        </select>
                        <span id="roleError" class="text-red-500 text-sm hidden"></span>
                    </div>
                </div>

                <!-- Submit Button -->
                <button type="submit" class="text-white bg-gradient-to-r from-blue-500 to-blue-700 hover:from-blue-600 hover:to-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-semibold rounded-lg text-base px-6 py-3 flex items-center justify-center shadow-lg transition duration-300 ease-in-out transform hover:scale-105">
                    <svg class="mr-2 w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    Add new customer
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Update modal -->
<!-- Modal -->
<div id="updateUserModal" tabindex="-1" aria-hidden="true" class="hidden fixed top-0 left-0 right-0 z-50 w-full h-full overflow-x-hidden overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen">
        <div class="relative w-full max-w-2xl">
            <div class="bg-white rounded-lg shadow-lg">
                <div class="flex justify-between items-center p-4 border-b">
                    <h3 class="text-lg font-semibold">Update User</h3>
                    <button type="button" class="text-gray-400 hover:bg-gray-200 hover:text-gray-900 rounded-lg p-1.5" onclick="closeModal()">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>

                <!-- Modal content -->
                <div class="relative p-4 bg-white rounded-lg shadow sm:p-5">
                    <form method="post" asp-page="./Index" asp-page-handler="Update" onsubmit="return validateFormUpdate()">

                        <input type="hidden" asp-for="Customer.Id" id="updateCustomerId" />
                        <div class="p-4">
                            <div class="grid gap-4 mb-4 sm:grid-cols-2">
                                <div>
                                    <label asp-for="Customer.Name" class="block mb-2 text-sm font-medium">Name</label>
                                    <input asp-for="Customer.Name" id="updateCustomerName" class="bg-gray-50 border border-gray-300 rounded-lg p-2.5 w-full" required />
                                    <span id="nameError" class="text-red-500 text-sm hidden"></span> <!-- Thêm thẻ span cho tên -->
                                </div>
                                <div>
                                    <label asp-for="Customer.Phone" class="block mb-2 text-sm font-medium">Phone Number</label>
                                    <input asp-for="Customer.Phone" id="updateCustomerPhone" class="bg-gray-50 border border-gray-300 rounded-lg p-2.5 w-full" required />
                                    <span id="phoneError" class="text-red-500 text-sm hidden"></span> <!-- Thêm thẻ span cho số điện thoại -->
                                </div>
                                <div>
                                    <label asp-for="Customer.RoleId" class="block mb-2 text-sm font-medium">Role</label>
                                    <select asp-for="Customer.RoleId" id="updateCustomerRole" class="bg-gray-50 border border-gray-300 rounded-lg p-2.5 w-full" required>
                                        <option value="" selected>Select Role</option>
                                        @if (Model.Roles != null)
                                        {
                                            foreach (var role in Model.Roles)
                                            {
                                                <option value="@role.Id">@role.Name</option>
                                            }
                                        }
                                    </select>
                                    <span id="roleError" class="text-red-500 text-sm hidden"></span> <!-- Thêm thẻ span cho vai trò -->
                                </div>
                            </div>
                            <div class="flex justify-end">
                                <button type="submit" class="bg-blue-700 text-white font-medium rounded-lg px-5 py-2.5">Update</button>
                                <button type="button" class="bg-red-600 text-white font-medium rounded-lg px-5 py-2.5 ml-2" onclick="closeModal()">Cancel</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts { 
<script>
    //Update Modal

    function openUpdateUserModal(button) {
        var customerId = button.getAttribute('data-id');
        var customerName = button.getAttribute('data-name');
        var customerPhone = button.getAttribute('data-phone');
        var customerRoleId = button.getAttribute('data-role-id');

        // Cập nhật giá trị vào các trường trong modal
        document.getElementById('updateCustomerId').value = customerId;
        document.getElementById('updateCustomerName').value = customerName;
        document.getElementById('updateCustomerPhone').value = customerPhone;
        document.getElementById('updateCustomerRole').value = customerRoleId;

        // Mở modal
        document.getElementById('updateUserModal').classList.remove('hidden');
    }

    function closeModal() {
        document.getElementById('updateUserModal').classList.add('hidden');
    }

    function validateFormUpdate() {
        // Lấy giá trị từ các trường trong form
        var customerName = document.getElementById('updateCustomerName').value;
        var customerPhone = document.getElementById('updateCustomerPhone').value;
        var customerRole = document.getElementById('updateCustomerRole').value;

        // Kiểm tra tên
        if (!customerName) {
            alert("Tên không được để trống.");
            return false; // Ngăn gửi form
        }

        // Kiểm tra số điện thoại
        if (!customerPhone) {
            alert("Số điện thoại không được để trống.");
            return false; // Ngăn gửi form
        } else if (!/^\d{10}$/.test(customerPhone)) {
            alert("Số điện thoại không hợp lệ.");
            return false; // Ngăn gửi form
        }

        // Kiểm tra vai trò
        if (!customerRole) {
            alert("Vui lòng chọn vai trò.");
            return false; // Ngăn gửi form
        }

        // Nếu tất cả đều hợp lệ, cho phép gửi form
        return true;
    }




    // Open modal function
    function openModal(customer) {
        document.getElementById('customerId').value = customer.id;
        document.getElementById('customerName').value = customer.name;
        document.getElementById('customerPhone').value = customer.phone;
        document.getElementById('customerEmail').value = customer.email;
        document.getElementById('customerRole').value = customer.roleId;
        document.getElementById('updateUserModal').classList.remove('hidden');
    }

    // Close modal function
    function closeModal() {
        document.getElementById('updateUserModal').classList.add('hidden');
    }

    // Example: Attach event to edit buttons
    document.querySelectorAll('.edit-button').forEach(button => {
        button.addEventListener('click', function () {
            const customer = {
                id: this.dataset.id,
                name: this.dataset.name,
                phone: this.dataset.phone,
                email: this.dataset.email,
                roleId: this.dataset.roleId,
            };
            openModal(customer);
        });
    });
    function validateForm() {
        // Lấy giá trị từ các trường
        const name = document.getElementById('customerName').value.trim();
        const email = document.getElementById('customerEmail').value.trim();
        const dob = document.getElementById('customerDob').value.trim();
        const phone = document.getElementById('customerPhone').value.trim();
        const username = document.getElementById('customerUsername').value.trim();
        const password = document.getElementById('customerPassword').value.trim();
        const address = document.getElementById('customerAddress').value.trim();
        const roleId = document.getElementById('customerRoleId').value;

        // Reset thông báo lỗi
        document.getElementById('nameError').classList.add('hidden');
        document.getElementById('emailError').classList.add('hidden');
        document.getElementById('dobError').classList.add('hidden');
        document.getElementById('phoneError').classList.add('hidden');
        document.getElementById('usernameError').classList.add('hidden');
        document.getElementById('passwordError').classList.add('hidden');
        document.getElementById('addressError').classList.add('hidden');
        document.getElementById('roleError').classList.add('hidden');

        let isValid = true;

        // Kiểm tra tên
        if (!name) {
            document.getElementById('nameError').textContent = 'Name is required';
            document.getElementById('nameError').classList.remove('hidden');
            isValid = false;
        } else if (name.length < 2) {
            document.getElementById('nameError').textContent = 'Name must be at least 2 characters';
            document.getElementById('nameError').classList.remove('hidden');
            isValid = false;
        }

        // Kiểm tra email
        if (!email) {
            document.getElementById('emailError').textContent = 'Email is required';
            document.getElementById('emailError').classList.remove('hidden');
            isValid = false;
        } else if (!emailRegex.test(email)) {
            document.getElementById('emailError').textContent = 'Invalid Email Address';
            document.getElementById('emailError').classList.remove('hidden');
            isValid = false;
        }

        // Kiểm tra ngày sinh
        if (!dob) {
            document.getElementById('dobError').textContent = 'Date of Birth is required';
            document.getElementById('dobError').classList.remove('hidden');
            isValid = false;
        } else {
            const dobDate = new Date(dob);
            const today = new Date();

            // Kiểm tra xem dob có phải là ngày trong tương lai không
            if (dobDate >= today) {
                document.getElementById('dobError').textContent = 'Date of Birth must be in the past';
                document.getElementById('dobError').classList.remove('hidden');
                isValid = false;
            } else {
                const age = today.getFullYear() - dobDate.getFullYear();
                const m = today.getMonth() - dobDate.getMonth();
                if (m < 0 || (m === 0 && today.getDate() < dobDate.getDate())) {
                    age--;
                }
                if (age < 18) {
                    document.getElementById('dobError').textContent = 'You must be at least 18 years old';
                    document.getElementById('dobError').classList.remove('hidden');
                    isValid = false;
                }
            }
        }

        // Kiểm tra số điện thoại
        if (!phone) {
            document.getElementById('phoneError').textContent = 'Phone number is required';
            document.getElementById('phoneError').classList.remove('hidden');
            isValid = false;
        } else if (!/^\d{10}$/.test(phone)) {
            document.getElementById('phoneError').textContent = 'Phone number must be 10 digits';
            document.getElementById('phoneError').classList.remove('hidden');
            isValid = false;
        }

        // Kiểm tra tên người dùng
        if (!username) {
            document.getElementById('usernameError').textContent = 'Username is required';
            document.getElementById('usernameError').classList.remove('hidden');
            isValid = false;
        } else if (username.length < 3) {
            document.getElementById('usernameError').textContent = 'Username must be at least 3 characters';
            document.getElementById('usernameError').classList.remove('hidden');
            isValid = false;
        }

        // Kiểm tra mật khẩu
        if (!password) {
            document.getElementById('passwordError').textContent = 'Password is required';
            document.getElementById('passwordError').classList.remove('hidden');
            isValid = false;
        } else if (password.length < 6) {
            document.getElementById('passwordError').textContent = 'Password must be at least 6 characters';
            document.getElementById('passwordError').classList.remove('hidden');
            isValid = false;
        }

        // Kiểm tra địa chỉ
        if (!address) {
            document.getElementById('addressError').textContent = 'Address is required';
            document.getElementById('addressError').classList.remove('hidden');
            isValid = false;
        }

        // Kiểm tra vai trò
        if (roleId === "Select Role") {
            document.getElementById('roleError').textContent = 'Please select a role';
            document.getElementById('roleError').classList.remove('hidden');
            isValid = false;
        }

        return isValid;
    }


</script>
}